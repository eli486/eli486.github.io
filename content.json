{"meta":{"title":"Eli の Small Cottage","subtitle":"😁","description":"好少年光芒万丈","author":"JunJiaGan","url":"https://eli486.github.io"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-06-25T15:11:11.976Z","comments":false,"path":"about/index.html","permalink":"https://eli486.github.io/about/index.html","excerpt":"","text":"[AlavonのEli] 与&nbsp; Eli&nbsp; 对话中... bot_ui_ini() function bot_ui_ini() { var botui = new BotUI(\"hello-eli\"); botui.message.add({ delay: 800, content: \"Selamat pagi👋\" }).then(function () { botui.action.button({ delay: 900, action: [{ text: \"哦哈呦！ 😃\", value: \"sure\" }, { text: \"? 🙄\", value: \"skip\" }] }).then(function (a) { \"sure\" == a.value && sure(); \"skip\" == a.value && end() }) }); var sure = function () { botui.message.add({ delay: 600, content: \"😘\" }).then(function () { secondpart() }) }, end = function () { botui.message.add({ delay: 600, content: \"![...](https://view.moezx.cc/images/2018/05/06/a1c4cd0452528b572af37952489372b6.md.jpg)\" }) }, secondpart = function () { botui.message.add({ delay: 1500, content: \"俺毕业于上海立信会计金融学院\" }).then(function () { botui.message.add({ delay: 1500, content: \"所学专业是数学与应用数学(金融方向)\" }).then(function () { botui.message.add({ delay: 1200, content: \"数学系的我只是咸鱼一条，baga一个\" }).then(function () { botui.message.add({ delay: 1500, content: \"考研fail，loser一枚\" }).then(function () { botui.message.add({ delay: 1500, content: \"辗转反侧,投身java\" }).then(function () { botui.message.add({ delay: 1800, content: \"我入单身狗之列了!\" }).then(function () { botui.action.button({ delay: 1100, action: [{ text: \"为什么叫Eli呢？ 🤔\", value: \"why-mashiro\" }] }).then(function (a) { thirdpart() }) }) }) }) }) }) }) }, thirdpart = function () { botui.message.add({ delay: 1E3, content: \"外语课上百度搜的name,中文含义:至高无上的 😀\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"为什么是Alavon呢？ 🤔\", value: \"why-cat\" }] }).then(function (a) { fourthpart() }) }) }, fourthpart = function () { botui.message.add({ delay: 1E3, content: \"Because Saber \" }).then(function () { botui.message.add({ delay: 1100, content: \"I want to be in Alavon and guard my King Arthur\" }) }) } }","keywords":"关于"},{"title":"chikala","date":"2018-12-20T15:13:05.000Z","updated":"2019-06-18T15:23:27.370Z","comments":false,"path":"chikala/index.html","permalink":"https://eli486.github.io/chikala/index.html","excerpt":"","text":"—佩恩—-一大米哟 抗几楼一大米哟 抗二楼一大米哟 吾给多累一大米哟 兮累一大米哟兮辣的糯米红豆糯 hat娃瓦岗null阔~阔~有~以say开你 以一大米哟信^罗~天^sei","keywords":"El Psy Congroo!!!"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-04-17T12:23:30.000Z","comments":false,"path":"client/index.html","permalink":"https://eli486.github.io/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-04-17T12:23:30.000Z","comments":true,"path":"comment/index.html","permalink":"https://eli486.github.io/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-04-17T12:23:30.000Z","comments":false,"path":"lab/index.html","permalink":"https://eli486.github.io/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-06-15T15:44:09.736Z","comments":true,"path":"links/index.html","permalink":"https://eli486.github.io/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-06-15T15:40:30.347Z","comments":false,"path":"music/index.html","permalink":"https://eli486.github.io/music/index.html","excerpt":"","text":"","keywords":"The power of music"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-04-17T12:23:30.000Z","comments":true,"path":"rss/index.html","permalink":"https://eli486.github.io/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-04-17T12:23:30.000Z","comments":true,"path":"tags/index.html","permalink":"https://eli486.github.io/tags/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-04-17T12:23:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"https://eli486.github.io/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-06-15T15:29:21.282Z","comments":false,"path":"video/index.html","permalink":"https://eli486.github.io/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-07-28T15:33:24.775Z","comments":false,"path":"bangumi/index.html","permalink":"https://eli486.github.io/bangumi/index.html","excerpt":"","text":"","keywords":null}],"posts":[{"title":"我的java知识体系--Blog","slug":"java","date":"2019-06-02T05:42:13.000Z","updated":"2019-07-10T13:50:55.808Z","comments":true,"path":"2019/06/02/java/","link":"","permalink":"https://eli486.github.io/2019/06/02/java/","excerpt":"","text":"好记性不如烂笔头，老师们都说要总结出自己的知识体系，自己的Blog当然要保留自己的学习历程,开一个系列记录点点滴滴，梳理自己的知识。 认识Java什么是Java?Java是面向对象的编程语言，是一种与计算机进行沟通的交互方式。 为什么说是面向对象的呢？这主要是区别于C语言。C语言是面向过程的，所谓的面向过程是指对一项业务实现方式的具现化，就是实现的细节要用逻辑代码呈现出来。相对的，面向对象并不需要我们知道具体的实现方式，只需要知道怎么去调用你所需要的业务对象。 Java有什么用?Sun公司争对不同的领域推出了不同的Java版本： 标准版：JavaSE:桌面应用开发 企业版：JavaEE:WEB应用开发 移动版：JavaME:移动端应用开发 怎么用Java？首先要去Oracle官网下载Java推荐稳定版本 Java8(https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)找到适合自己电脑系统的，这里需要oracle账号，提供一个(https://www.cnblogs.com/hfultrastrong/p/8616693.html) 感谢大佬下载好之后你需要配置Java运行环境理解参考(https://www.cnblogs.com/echomyecho/p/3334617.html) JAVA_HOME:设置jdk的安装路径CLASSPATH:设置java各个类的路径 .class的路径,具体含义参考(https://segmentfault.com/a/1190000015802324)PATH:设置jdk中各个程序的路径 Java基础基本数据类型8种基本数据类型：整数型： byte 1字节 占8位 -128~127 short 2字节 占16位 -2^15~2^15-1 char 2字节 占16位 0~65535 int 4字节 占32位 -2^31~2^31-1 long 8字节 占64位 -2^63~2^63-1浮点型： float 4字节 占32位 小数点后6位 double 8字节 占64位 小数点后16位布尔类型： boolean 存储两个值true和false 具体占几字节可以参考(https://www.jianshu.com/p/2f663dc820d0) 变量的创建与使用变量创建遵守规则：声明变量：&nbsp;&nbsp;&nbsp;变量类型 变量名;如：&nbsp;&nbsp;&nbsp;int a;变量名的命名要以数字、字母、$和下划线组成且不能以数字开头。常见命名以驼峰命名法为主，如studentId声明变量并初始化：&nbsp;&nbsp;&nbsp;变量类型 变量名 = 值;如：&nbsp;&nbsp;&nbsp;int a = 1; Java的数据结构1.运算符：数学运算符：+&nbsp; - &nbsp; * &nbsp;/ &nbsp;%关系运算符：&gt; &nbsp;&lt;&nbsp; &gt;=&nbsp; &lt;=&nbsp; ==&nbsp; !=算术运算符：+=&nbsp; -=&nbsp; * =&nbsp; /=&nbsp; %=逻辑运算符： &amp;&amp; &nbsp;||&nbsp; !=三目运算符：a == b? a : b 2.分支结构ifif..elseif..else if… switch …case3.循环结构循环三要素：1.循环变量2.循环条件3.循环变量向着循环条件的结束而改变 whiledo…whilefor 数组与引用数据类型数组可以看作是相同类型元素的集合。数组的长度是固定不变的。数组是引用类型，它所指向的的是元素在内存中存放的地址信息。创建数组的方式： int [] arr = new int[10]; int [] arr = new int[]{1,2,3}; int [] arr = {1,2,3}; Number类型的数组默认元素初始值为0，第一种方式创建长度为10的int类型数组且默认值为0；引用类型的数组元素默认值为null;数组中的元素通过下标来获取，下标从0开始，代表元素在数组中所在位置；如：arr[0]-&gt;1&nbsp; &nbsp;arr[1]-&gt;2&nbsp; &nbsp;arr[2]-&gt;3若获取arr[3]超出了该数组的元素个数会抛出OutOfIndexException，也就是数组下标越界异常 数组的复制：1.System.arrayCopyOf(原数组，原数组起始位置，目标数组，目标数组起始位置，长度);2.Arrays.copyOf(原数组，长度);扩容 面向对象编程(OOP)类与对象万物皆对象，每个对象都有属性和行为，我们把具有相同属性和行为的对象归结为一类。类是从对象中抽象出来的概念，一个类可以有多个对象，对象是现实存在的事物个体。 方法与构造方法方法的创建规则： 访问控制修饰符 返回值类型 方法名(参数列表){方法体}构造方法: 访问控制修饰符 构造方法名(){方法体}1.作用：为成员变量赋值2.创建对象通过new3.构造方法可以重载，构造方法名必须和类名一致4.系统默认提供无参构造方法，若重载添加了有参构造方法，则系统不会默认提供构造方法 继承与向上造型一个类通过extends与另一个类建立关系，那么就说这两个类是继承关系，一个是派生类(或子类)，被继承的称为超类(或父类)。子类继承并可以访问父类的属性和行为，但不能继承父类的构造方法。Super s = new Sub();父类指向子类的创建对象的方式，我们称之为向上造型。 重载与重写重载：发生在同一个类中，方法名相同，但参数列表和方法体不同；重载遵循编译期绑定重写：发生在父子类中，子类重写父类非私有方法，方法名和参数列表相同，但方法体不同。 访问控制修饰符权限要大于等于被重写方法的访问修饰符权限。重写遵循运行期绑定。 引用传递与值传递内存管理堆(heap) 存放new出来的对象栈(stack) 存放局部变量方法区： 存放.class字节码文件和静态变量、方法等 package、访问控制修饰符(Modifiers)、final、staticpackage：为了解决命名冲突访问控制修饰符：public:皆可访问protected: 本包类、子包类、本包其他类default:本包、本包其他类private: 本包类 final:修饰变量：允许初始化修改一次，之后不能再修改修饰方法：该方法不可被重写修饰类：该类不能再继承static:修饰变量：该变量声明为静态变量，属于这个类，可以通过类名.调用，也可以通过对象调用但不常用。静态变量常用来指代全局共享的资源，只被加载一次。修饰方法：该方法声明为静态方法，属于这个类，可以通过类名.调用，也可以通过对象调用但不常用。静态方法不可以被重写，静态方法中没有隐式的this修饰，只能访问静态资源，不能访问非静态资源。 抽象类与接口抽象类：由abstract修饰可以有抽象方法和非抽象方法不能被实例化必须被继承，单继承 接口：interface只含有常量和抽象方法必须被实现或继承，可以多继承，多实现 内部类局部内部类：成员内部类： Java的三大特性封装：将对象的属性和行为封装到类中，通过访问控制修饰限制外界的访问，将具体的实现细节隐藏到方法中，对外只提供调用方法。继承：抽取对象中的所有公共属性和行为到超类中，派生类保有自身的特有属性和行为，实现代码复用。继承是单一性的，一个类只能继承一个类；继承又具有传递性，可以间接继承另一个类。多态：多态分为编译时多态与运行时多态。编译时多态：对象的多态体现在重载中，参数列表不同，调用的对象不同。运行时多态：行为的多态体现在重写中，方法体不同，实现的行为不同。 Java APIStringString是不可变对象，由final修饰，其底层实现原理是由char数组组成，每一次引用改变的是引用存放的地址空间。String常量池：每次创建新的String对象，都会检查其常量池中是否已经存在该对象，若不存在，则添加在其中；若存在，则不会创建新的对象，而是将引用指向常量池中已有的该对象。 正则表达式(Regular expression)本身就是字符串用来检测文本规则 \\w:[0-9a-zA-Z_]\\d:[0-9]X^*:&gt;=0个XX^+:&gt;=1个XX{n}:n个XX{n,m}:n~m个Xx{n,}:&gt;=n个X Object与包装类(wrap class)Object类是所有类的最终父类 包装类是对所有基本类型的封装数值类型包括：ByteShortIntegerLongDoubleFloat CharacterBoolean 装箱：Inter i = Integer.valueOf();拆箱：int i = Integer.parseInt(); File创建目录/文件夹：boolean mkdir()创建文件： void createNewFile()创建多级目录：boolean mkdirs() 若路径下目录不全则自动补全删除文件或目录：void delete() 删除目录时要确保是空目录才能删除成功 RandomAccessFileIO流节点流与处理流：(低级流与高级流) 字节流与字符流 SocketThread进程与线程创建线程的两种方式：1.继承Thread类2.实现Runnable接口线程的生命周期：分为5个环节：创建：就绪：等待CPU分配时间片调度线程运行：得到CPU时间片阻塞：分到的时间片时间结束或受其他原因运行停止等待时间片死亡：线程任务结束销毁线程线程常用方法：sleep()：wait()：join()：yield()：notify()：notifyAll()： 线程安全问题：当多线程中的代码执行与在单线程中的执行或我们预期的执行结果不一致时，我们就称为线程安全问题。 ExceptionCollectionGenericXML线程池LambdaDateHTML、CSS、JavaScriptMysql数据库相关：show databases;create database 数据库名 character set utf8/gbk;use 数据库名;show create database 数据库名drop database 数据库名;表相关：show tables;create table 表名(字段名 字段类型 字段约束) engine=myisam/innodb charset=utf8/gbk;desc 表名;rename table 原名 to 新名;alter table 表名 engine=myisam/innodb charset=utf8/gbk;alter table 表名 add 字段 字段类型 字段约束;alter table 表名 change 原名 新名 新字段类型alter table 表名 modify 字段名 新类型 first/after xxx;alter table 表名 drop 字段;drop table 表名;数据相关：insert into 表名 (字段名) values(值1,值2),(值1,值2),(值1,值2);update 表名 set 字段=值 where 条件;select (字段) from 表名 where 条件;delete from 表名 where 条件; 事务：什么是事务：事务是指数据库中同一业务多条SQL语句的工作单元，事务可以保证多条SQL语句全部执行成功或全部执行失败。 DDL(Data Definition Language):数据定义语言有：create alter drop truncateDML(Data Manipulate Language)：数据操作语言 insert update delete selectDQL(Data Query Language):数据查询语言 selectTCL(Transaction control Language):事务控制语言 begin commit rollback savepoint xxx rollback to xxxDCT(Data Control Language):数据控制语言 分配用户权限相关的SQL 事务的四大特性：1.原子性：同一业务的多条sql语句作为一个整体不可拆分2.一致性：多条sql语句全部成功或全部失败3.隔离性：多个事务之间互不干扰3.持久性：提交后的数据储存在硬盘中持久保存 日期相关：select now();select curdate(),curtime();select extract(year from now()); 视图：数据库中表和视图都是其内部的对象，视图本质其实是取代了一段SQL查询语句，视图没有自己独立的数据，数据来自于原表 视图的作用： 1. 重用SQL，提高开发效率 2. 隐藏敏感字段create view 视图名 as(子查询)数据污染：指在视图中不可见原表中可见的数据对视图的数据的删改将影响原表数据。 索引：create index 索引名 on 表名(字段);索引的优缺点：1.类似字典的目录可以提高查询效率2.对于少量数据的查询索引并不能带来效率的提高，反而可能更慢3.过多的索引占据内存空间影响查询效率 select 字段 from 表名 where 条件 group by 字段 having 聚合函数条件 order by 字段 limit 跳过条数,请求条数; group_concat()方法 组连接查询每个部门的员工姓名和工资,要求每个部门的数据显示在一行 select deptno,group_concat(ename,’:’,sal) from emp group by deptno; Jsp与ServletJsp:Java Server PagesServlet是由Sun公司开发的用来扩展web服务器的组件规范。 Spring框架1.什么是框架框架是为了简化代码而实现的一种符合标准业务规范的组件。2.Spring框架的作用通过Spring框架，解决了创建对象和管理对象的问题。 常用注解：@Component@Controller@Service@Responrity SpringMVC常用注解：@RequestMapping Mybatis简化持久层开发：1.创建实体类2.配置mybatis映射，在mybatis配置文件config.xml中添加sql语句3.添加接口的抽象方法 AJAX@RestController：@Controller和@ResponseBody的组合Json:数据类型AJAX:Asynchronous Javascript And Xml $.ajax({ “url”:””, “data”:””, “type”:””, “dataType”:”” “success”:function(obj){ }, &quot;error&quot;:function(obj){ } }) SpringBootSpringBoot是一个轻量级框架。什么是轻量级框架？首先，要理解轻量级的概念，这是相对于重量级提出的。可参考(https://blog.csdn.net/qq_29229567/article/details/80561332)我们之前用的框架都是需要进行许多配置，而springboot简化了这些配置，减少了开发的复杂度，这就是轻量级的表现，也是springboot的特性之一：约定大于配置。 ProjectLinux基本语法： 命令 -选项 参数1 参数2 cd 切换到某个目录 ls 显示当前目录下内容 pwd 显示当前所在目录 cat 查看当前目录内容 more 分屏显示内容 mkdir 创建文件夹 touch 创建文件 mv 移动文件 rm 删除文件 cp 复制文件 ssh 用户名@ip vim： i 插入模式 Esc+shift:wq 保存并退出 Nginx","categories":[{"name":"唠唠","slug":"唠唠","permalink":"https://eli486.github.io/categories/唠唠/"}],"tags":[{"name":"破万卷","slug":"破万卷","permalink":"https://eli486.github.io/tags/破万卷/"},{"name":"java","slug":"java","permalink":"https://eli486.github.io/tags/java/"}],"keywords":[{"name":"唠唠","slug":"唠唠","permalink":"https://eli486.github.io/categories/唠唠/"}]},{"title":"Link Start","slug":"hello-world","date":"2019-05-01T00:00:01.000Z","updated":"2019-06-18T15:26:58.094Z","comments":true,"path":"2019/05/01/hello-world/","link":"","permalink":"https://eli486.github.io/2019/05/01/hello-world/","excerpt":"啪啪啪！终于捣鼓出了一个模板，以后可以在此基础上慢慢⛏。 看了老多文字教学，始终没弄出想要的样子，照着做还老出错。还是视频教学更适合我，感谢那么多大佬耐心地在B站上传了视频，首先就要记住hojun大佬。 作为第一篇Blog,先水一下hexo+GitHub Page搭建此博客。 Blog の Set 准备好Git、Node.js以及github账号 简单介绍: Git:分布式版本控制系统 Node.js:运行在服务端的javascript(非阻塞与事件驱动) (暂不理解两者运行机制，再学习学习。。。)","text":"啪啪啪！终于捣鼓出了一个模板，以后可以在此基础上慢慢⛏。 看了老多文字教学，始终没弄出想要的样子，照着做还老出错。还是视频教学更适合我，感谢那么多大佬耐心地在B站上传了视频，首先就要记住hojun大佬。 作为第一篇Blog,先水一下hexo+GitHub Page搭建此博客。 Blog の Set 准备好Git、Node.js以及github账号 简单介绍: Git:分布式版本控制系统 Node.js:运行在服务端的javascript(非阻塞与事件驱动) (暂不理解两者运行机制，再学习学习。。。) Bind Git with Your Github account$ git config --global user.name &quot;你的GitHub用户名&quot; $ git config --global user.email &quot;你的GitHub注册邮箱&quot; Generadte a SSH key为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 $ cd ~/. ssh #检查本机已存在的ssh密钥 如果提示：No such file or directory 说明你是第一次使用git。 生成密匙(id_rsa(私钥)、id_rsa.pub(公钥))：两种方式：第一种： 按三次回车 $ ssh-keygen -t rsa -C &quot;邮件地址&quot; 这是在C盘用户目录下的.ssh下创建了一个默认的名为id_rsa的文件里面存放密钥 第二种：第一次回车后需要命名 $ ssh-keygen -t rsa -f ~/.ssh/随便名字_id_rsa -C &quot;yourmail@xxx.com&quot; 这是创建了自定义命名的rsa密钥(涉及多个github更新多个hexo博客：https://www.jianshu.com/p/0ee8b976ceab https://www.jianshu.com/p/95e00370fa2c?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=seo_notes&amp;utm_source=recommendation留此备学)补充：添加Git SSH 提示：Could not open a connection to your authentication agent。原因：未启动ssh agent输入： $ eval `ssh-agent -s` (是～键上的那个`） Add the SSH key and Test it$ ls -a #直接查看所有文件 $ cat .ssh\\id_rsa.pub #直接终端打开文件即可 复制里面的内容，打开你的github主页，进入个人设置(点用户头像里的那个setting) -&gt; SSH and GPG keys -&gt; New SSH key：将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。 在 Git Bash 中检测 GitHub 公钥设置是否成功，输入 : $ ssh git@github.com 看到：You’ve successfully authenticated, but GitHub does not provide shell access.就成了。 通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。(参考学习链接：https://www.jianshu.com/p/860d3e0fff58) Install Hexo安装Hexo:在Git Bash命令窗口输入: $ npm install -g hexo-cli Create a Blog在想要安装的目录下新建一个你的Blog文件夹直接在Git Bash命令窗口输入也行初始化： $ hexo init &quot;博客文件夹名&quot; $ npm install #安装依赖包 Create a new post$ hexo new &quot;博客文章名&quot; 在source/_posts中将生成 文章名.md文件 Run server$ hexo server Generate static files$ hexo generate Deploy to remote sites$ hexo deploy Show the page输入： $ hexo s -p 4000 在浏览器输入loclahost:4000即可看到初始化页面","categories":[{"name":"学习","slug":"学习","permalink":"https://eli486.github.io/categories/学习/"}],"tags":[{"name":"web","slug":"web","permalink":"https://eli486.github.io/tags/web/"},{"name":"行千里","slug":"行千里","permalink":"https://eli486.github.io/tags/行千里/"}],"keywords":[{"name":"学习","slug":"学习","permalink":"https://eli486.github.io/categories/学习/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2019-06-15T14:44:15.556Z","comments":true,"path":"2018/12/12/Hexo-Theme-Sakura/","link":"","permalink":"https://eli486.github.io/2018/12/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"膜拜","slug":"膜拜","permalink":"https://eli486.github.io/categories/膜拜/"}],"tags":[{"name":"web","slug":"web","permalink":"https://eli486.github.io/tags/web/"},{"name":"破万卷","slug":"破万卷","permalink":"https://eli486.github.io/tags/破万卷/"}],"keywords":[{"name":"膜拜","slug":"膜拜","permalink":"https://eli486.github.io/categories/膜拜/"}]}]}